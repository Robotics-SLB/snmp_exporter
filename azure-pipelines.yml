# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerId: MarineRobotics
  imageName: snmp_exporter

steps:
- bash: |
    shopt -s nullglob
    function join_by { local IFS="$1"; shift; echo "$*"; }
    lib_path=$(join_by ';' $(Agent.WorkFolder)/_tasks/GitVersion*/4.0.*/lib/linux/x86_64)
    echo LD_LIBRARY_PATH: $lib_path
    echo "##vso[task.setvariable variable=LD_LIBRARY_PATH]$lib_path"
  displayName: Update LD_LIBRARY_PATH for GitVersion
- task: GitVersion@4
- script: |
    echo '##vso[task.setvariable variable=Build.BuildNumber]${Build.BuildNumber//+/- }'
- script: |
    cd generator
    make mibs
    docker build -t snmp-generator .
    docker run -v "${PWD}:/opt/" snmp-generator generate
    ls -l
    cp snmp.yml ../
  displayName: 'Build snmp.yml'
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: "Marine Robotics Registry"
- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    Dockerfile: Dockerfile.snmp
    repository: snmp_exporter
    tags: |
      latest
      $(GitVersion.MajorMinorPatch)
      $(Build.BuildNumber)
